@model BugDetective.Models.DataTables.Tickets
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Tickets</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Title)
        @Html.HiddenFor(model => model.Created)
        @Html.HiddenFor(model => model.OwnerId)

        @if (User.IsInRole("Admin"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.ProjectId, "Project", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <input type="hidden" name="ProjectId" value="@Model.ProjectId" />
    <div class="form-group">
        <p>Project: @Model.Project.Name</p>
    </div>
        }
        @if (User.IsInRole("Admin") || Model.OwnerId == User.Identity.GetUserId()) { 
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        }
        else
        {
            <input type="hidden" name="Description" value="@Model.Description" />
            <div class="form-group">
                @Html.Display(Model.Description)
            </div>
        }

        @if(User.IsInRole("Admin") || User.IsInRole("Project Manager")){
        <div class="form-group">
            @Html.LabelFor(model => model.TicketTypeId, "Ticket Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TicketPriorityId, "Ticket Priority", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
            </div>
        </div>
        }
        else
        {
            <input type="hidden" name="TicketTypeId" value="@Model.TicketTypeId" />
            <input type="hidden" name="TicketPriorityId" value="@Model.TicketPriorityId" />
            <p>Ticket Type: @Model.TicketType.Name</p>
            <p>Ticket Priority: @Model.TicketPriority.Name</p>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.TicketStatusId, "Ticket Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
            </div>
        </div>

        @if(User.IsInRole("Admin") || User.IsInRole("Project Manager")){
        <div class="form-group">
            @Html.LabelFor(model => model.AssignedId, "User Assigned", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AssignedId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Assigned.DisplayName, "", new { @class = "text-danger" })
            </div>
        </div>
        }
        else
        {
            <input type="hidden" name="AssignedId" value="@Model.AssignedId" />
            <p>User Assigned: @Model.Assigned.DisplayName</p>
        }
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
